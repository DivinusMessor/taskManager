# """Initial migration

# Revision ID: ac9cf78e305c
# Revises: 
# Create Date: 2023-04-12 09:35:02.167916

# """
# from alembic import op
# import sqlalchemy as sa


# # revision identifiers, used by Alembic.
# revision = 'ac9cf78e305c'
# down_revision = None
# branch_labels = None
# depends_on = None


# def upgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_table('_alembic_tmp_task')
#     with op.batch_alter_table('task', schema=None) as batch_op:
#         batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=False))
#         batch_op.alter_column('title',
#                existing_type=sa.VARCHAR(length=100),
#                type_=sa.String(length=120),
#                existing_nullable=False)
#         batch_op.alter_column('description',
#                existing_type=sa.VARCHAR(length=255),
#                type_=sa.String(length=500),
#                existing_nullable=True)
#         batch_op.alter_column('completed',
#                existing_type=sa.BOOLEAN(),
#                nullable=False)

#     # ### end Alembic commands ###


# def downgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     with op.batch_alter_table('task', schema=None) as batch_op:
#         batch_op.alter_column('completed',
#                existing_type=sa.BOOLEAN(),
#                nullable=True)
#         batch_op.alter_column('description',
#                existing_type=sa.String(length=500),
#                type_=sa.VARCHAR(length=255),
#                existing_nullable=True)
#         batch_op.alter_column('title',
#                existing_type=sa.String(length=120),
#                type_=sa.VARCHAR(length=100),
#                existing_nullable=False)
#         batch_op.drop_column('created_at')

#     op.create_table('_alembic_tmp_task',
#     sa.Column('id', sa.INTEGER(), nullable=False),
#     sa.Column('title', sa.VARCHAR(length=120), nullable=False),
#     sa.Column('description', sa.VARCHAR(length=500), nullable=True),
#     sa.Column('completed', sa.BOOLEAN(), nullable=False),
#     sa.Column('created_at', sa.DATETIME(), nullable=False),
#     sa.PrimaryKeyConstraint('id')
#     )
#     # ### end Alembic commands ###
"""Initial migration

Revision ID: ac9cf78e305c
Revises: 
Create Date: 2023-04-12 09:35:02.167916

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'ac9cf78e305c'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # Create a new table with the desired schema
    op.create_table('task_new',
                    sa.Column('id', sa.Integer, primary_key=True),
                    sa.Column('title', sa.String(100), nullable=False),
                    sa.Column('description', sa.String(255), nullable=True),
                    sa.Column('completed', sa.Boolean, default=False),
                    sa.Column('created_at', sa.DateTime, nullable=False, server_default=sa.text("(datetime('now'))"))
                    )

    # Copy data from the old table to the new table
    op.execute("INSERT INTO task_new (id, title, description, completed) SELECT id, title, description, completed FROM task;")

    # Drop the old table
    op.drop_table('task')

    # Rename the new table to the original name
    op.rename_table('task_new', 'task')


def downgrade():
    # Revert the changes by following similar steps in the reverse order
    op.create_table('task_old',
                    sa.Column('id', sa.Integer, primary_key=True),
                    sa.Column('title', sa.String(100), nullable=False),
                    sa.Column('description', sa.String(255), nullable=True),
                    sa.Column('completed', sa.Boolean, default=False)
                    )

    op.execute("INSERT INTO task_old (id, title, description, completed) SELECT id, title, description, completed FROM task;")
    op.drop_table('task')
    op.rename_table('task_old', 'task')
